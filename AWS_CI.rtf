{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17320\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
Create a AWS account\
Open management console\

\b MASTER SETUP:
\b0 \
Launch a ec2 instance & download the corresponding pem key pair file\
Use the pem file to login into the instance using ssh  -I <pem> <ec2-name>@<hostname>\
Command : 
\f1\fs22 \cf2 \cb3 \CocoaLigature0 ssh -i "devops-amazon.pem" ubuntu@ec2-54-213-229-220.us-west-2.compute.amazonaws.com
\f0\fs24 \cf0 \cb1 \CocoaLigature1 \
\'97 update apt-get\
\'97 install java\
\'97 add the Jenkins key into the apt-key list\
\'97 add the Jenkins installable sources list\
\'97 update apt-get\
\'97 install jekins\
Commands:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf2 \cb3 \CocoaLigature0      sudo apt-get update\
     sudo apt-get install default-jdk\
     sudo apt-key list\
     sudo wget -q -O - "https://pkg.jenkins.io/debian/jenkins-ci.org.key"|sudo apt-key add -\
     sudo sh -c 'echo deb https://pkg.jenkins.io/debian binary/ > /etc/apt/sources.list.d/jenkins.list'\
     sudo apt-get update\
     sudo apt-get install jenkins\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \CocoaLigature1 Configure the open ports for the Jenkins web access in AWS security groups assigned to the VM\
\

\b SLAVE SETUP:\

\b0 Create a second ec2 instance & assign the same security group\
We can ssh into the slave using the same pem file of the master as they are created by the same AWS user\
Same as the master, update the java\
\
Goto Manage Jenkins -> Global Security Config -> Enable random JNLP slaves\
Goto Manage Nodes -> New Node -> provide the root directory ->\
1) JNLP\
- select he launch with java webstart option\
- downlaod & copy the jnlp file & agent.jar file from the next page to the slave machine and run the java -jar command provided on the screen\
- make sure all the ports are open \
\
2) SSH\
- select launch unix via ssh option\
- in the slave machine, run ssh-keygen -t rsa to create public & private keys\
- add the pub keys content into the authorised keys in the slave machine\
- copy the private key file into the ssh folder of the master\
- in node config page, select the credential option ssh username with private key\
- specify the username & paste the contents of the private key copied to the master\
- specify the location of any of the tools installed \
\
Slaves are Good to go\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 \
\
Role based authorisation\
\
- install the role based strategy plugin\
- set the role based authorisation in global tool config\
- goto manage Jenkins- > manage+assign roles\
- manage roles\
 	- assign the overall read permissions\
	- assign the project related permissions\
	- assign the node related permissions\
All wild cards are expressed as <pattern>.*\
- assign roles\
	- assign the registered users to the specified roles\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 \
\
Remote trigger\
\
Curl -u <userid>:<user_token> <job url>/build?token=<set_token>\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 \
\
Create web hook\
\
\'97 goto Manage Jenkins -> Configure system -> Github -> Advanced -> Specify new hook url\
\'97 copy this url, goto git-repo\
\'97 goto settings\
\'97 goto web hook\
\'97 paste the payload url\
\'97 select the even you want the build to occur on\
\'97 goto the build job & select the build trigger as \'93GitHub hook trigger\'94}